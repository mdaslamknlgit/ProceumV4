 ; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "EduDrive"
#define MyAppVersion "3.3.0"
#define MyAppPublisher "EduDrive e-Learning"
#define MyAppURL "http://www.google.com"
#define MyAppExeName "EduDrive Client.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{C10182B7-8EAD-426D-BE23-DCE64711C0EC}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DisableProgramGroupPage=yes
OutputDir=E:\GIT\EduDrive\Proceum\Proceum\bin\Admin\ClientSetup
Compression=lzma
SolidCompression=yes
SetupIconFile=E:\GIT\EduDrive\Proceum\Proceum\Resources\software-installer.ico
UninstallDisplayIcon={app}\company.ico
UninstallDisplayName=e-Learning App
VersionInfoVersion=4.0.0
OutputBaseFilename=setup  
DisableWelcomePage=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"

[Files]
Source: "..\bin\Customer\nl\*"; DestDir: "{app}\nl"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\bin\Customer\x64\*"; DestDir: "{app}\x64"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\bin\Customer\x86\*"; DestDir: "{app}\x86"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\..\..\SupportFiles\NDP452-KB2901907-x86-x64-AllOS-ENU.exe"; DestDir: "{app}\SupportFiles"; Check: FrameworkIsNotInstalled; AfterInstall: InstallFramework
Source: "..\bin\Customer\AxInterop.WMPLib.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\BoxedAppSDK.Managed.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\EduDrive Client_protected.exe"; DestDir: "{app}"; DestName: "EduDrive Client.exe"; Flags: ignoreversion
Source: "..\bin\Customer\EduDrive Client.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\EntityFramework.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\EntityFramework.SqlServer.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\EntityFramework.SqlServer.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\EntityFramework.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\helvetica.ttf"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\ICSharpCode.SharpZipLib.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\Interop.WMPLib.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\LeoscarSansSerif.ttf"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\MetroFramework.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\MetroFramework.Fonts.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\Newtonsoft.Json.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\Newtonsoft.Json.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\PdfiumViewer.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\PdfiumViewer.pdb"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\SQLite.CodeFirst.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\System.Data.SQLite.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\System.Data.SQLite.EF6.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\System.Data.SQLite.Linq.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Customer\System.Data.SQLite.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\edudrive\company.dll"; DestDir: "{app}"; Flags: external ignoreversion; Permissions: users-full
Source: "{src}\edudrive\company.ico"; DestDir: "{app}"; Flags: external ignoreversion
Source: "..\bin\Customer\AWSSDK.S3.dll"; DestDir: "{app}"
Source: "..\bin\Customer\AWSSDK.Core.dll"; DestDir: "{app}"

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\company.ico"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\company.ico"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Dirs]
Name: "{app}\data"; Flags: uninsalwaysuninstall; Permissions: users-full

[Messages]
english.WelcomeLabel2=**WARNING**%nDue to advance security used in this software, your antivirus may not allow it to execute. In such case, please disable your antivirus and reinstall this software again.%n%nBe assured that this software is 100% safe. We are working with antivirus companies to remove this FALSE POSITIVE.
english.WelcomeLabel1=Welcome to the [name]

[Code]
procedure InstallFramework;
var
  StatusText: string;
  var
  ResultCode: Integer;
begin
  StatusText := WizardForm.StatusLabel.Caption;
  WizardForm.StatusLabel.Caption := 'Installing .NET framework v4.5.2...';
  WizardForm.ProgressGauge.Style := npbstMarquee;
  try
    // here put the .NET setup execution code
    


  if not Exec(ExpandConstant('{app}\SupportFiles\NDP452-KB2901907-x86-x64-AllOS-ENU.exe'), '/q /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
  begin
    // you can interact with the user that the installation failed
    MsgBox('.NET installation failed with code: ' + IntToStr(ResultCode) + '.',
      mbError, MB_OK);
  end;

  finally
    WizardForm.StatusLabel.Caption := StatusText;
    WizardForm.ProgressGauge.Style := npbstNormal;
  end;
end;
[Code]

function FrameworkIsNotInstalled: Boolean;
begin
  Result := not RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full');
end;


function InitializeSetup(): Boolean;
begin
//  MsgBox('', mbInformation, MB_OK);

  Result := True;
end;
